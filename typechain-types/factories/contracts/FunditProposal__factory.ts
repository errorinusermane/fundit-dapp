/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FunditProposal,
  FunditProposalInterface,
} from "../../contracts/FunditProposal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "closeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_mandatoryRequirements",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_enrollmentConditions",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_optionalFeatures",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "_desiredStartDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minPremium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPremium",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "mandatoryRequirements",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "enrollmentConditions",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "optionalFeatures",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "desiredStartDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "enum FunditProposal.ProposalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "bidCount",
            type: "uint256",
          },
        ],
        internalType: "struct FunditProposal.Proposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "mandatoryRequirements",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "enrollmentConditions",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "optionalFeatures",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "desiredStartDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "enum FunditProposal.ProposalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "bidCount",
            type: "uint256",
          },
        ],
        internalType: "struct FunditProposal.Proposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getProposalsByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "mandatoryRequirements",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "enrollmentConditions",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "optionalFeatures",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "desiredStartDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPremium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "enum FunditProposal.ProposalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "bidCount",
            type: "uint256",
          },
        ],
        internalType: "struct FunditProposal.Proposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "incrementBidCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "desiredStartDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPremium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPremium",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "enum FunditProposal.ProposalStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "bidCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type FunditProposalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunditProposalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunditProposal__factory extends ContractFactory {
  constructor(...args: FunditProposalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FunditProposal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FunditProposal__factory {
    return super.connect(runner) as FunditProposal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunditProposalInterface {
    return new Interface(_abi) as FunditProposalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FunditProposal {
    return new Contract(address, _abi, runner) as unknown as FunditProposal;
  }
}
