/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFunditBid,
  IFunditBidInterface,
} from "../../../contracts/FunditContract.sol/IFunditBid";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bidId",
        type: "uint256",
      },
    ],
    name: "bidVoteCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bidId",
        type: "uint256",
      },
    ],
    name: "getBid",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "coverageOffer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumOffer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFunditBid__factory {
  static readonly abi = _abi;
  static createInterface(): IFunditBidInterface {
    return new Interface(_abi) as IFunditBidInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IFunditBid {
    return new Contract(address, _abi, runner) as unknown as IFunditBid;
  }
}
