/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FunditBid, FunditBidInterface } from "../../contracts/FunditBid";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coverageOffer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premiumOffer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BidSubmitted",
    type: "event",
  },
  {
    inputs: [],
    name: "bidCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bids",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "coverageOffer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumOffer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bidsByProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bidId",
        type: "uint256",
      },
    ],
    name: "getBid",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "coverageOffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct FunditBid.Bid",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getBidsByProposal",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "coverageOffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumOffer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct FunditBid.Bid[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coverageOffer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumOffer",
        type: "uint256",
      },
    ],
    name: "submitBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610b378061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633c889e6f14610067578063416f222a146100975780634423c5f1146100b35780634536caef146100e85780637801090714610118578063b40a562714610148575b600080fd5b610081600480360381019061007c919061067d565b610166565b60405161008e9190610775565b60405180910390f35b6100b160048036038101906100ac9190610790565b61021b565b005b6100cd60048036038101906100c8919061067d565b6103a0565b6040516100df96959493929190610801565b60405180910390f35b61010260048036038101906100fd919061067d565b6103fc565b60405161010f919061098c565b60405180910390f35b610132600480360381019061012d91906109ae565b6105bf565b60405161013f91906109ee565b60405180910390f35b6101506105f0565b60405161015d91906109ee565b60405180910390f35b61016e6105f6565b600160008381526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820154815250509050919050565b600160008082825461022d9190610a38565b925050819055506040518060c0016040528060005481526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001428152506001600080548152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a082015181600501559050506002600084815260200190815260200160002060005490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16836000547feb73a32aed81b78fc57608f008196f42c421c53c32cb58502934bc63c6652d5a85854260405161039393929190610a6c565b60405180910390a4505050565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154905086565b606060006002600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561045d57602002820191906000526020600020905b815481526020019060010190808311610449575b505050505090506000815167ffffffffffffffff81111561048157610480610aa3565b5b6040519080825280602002602001820160405280156104ba57816020015b6104a76105f6565b81526020019060019003908161049f5790505b50905060005b82518110156105b457600160008483815181106104e0576104df610ad2565b5b602002602001015181526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820154815260200160058201548152505082828151811061059c5761059b610ad2565b5b602002602001018190525080806001019150506104c0565b508092505050919050565b600260205281600052604060002081815481106105db57600080fd5b90600052602060002001600091509150505481565b60005481565b6040518060c001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b600080fd5b6000819050919050565b61065a81610647565b811461066557600080fd5b50565b60008135905061067781610651565b92915050565b60006020828403121561069357610692610642565b5b60006106a184828501610668565b91505092915050565b6106b381610647565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106e4826106b9565b9050919050565b6106f4816106d9565b82525050565b60c08201600082015161071060008501826106aa565b50602082015161072360208501826106aa565b50604082015161073660408501826106eb565b50606082015161074960608501826106aa565b50608082015161075c60808501826106aa565b5060a082015161076f60a08501826106aa565b50505050565b600060c08201905061078a60008301846106fa565b92915050565b6000806000606084860312156107a9576107a8610642565b5b60006107b786828701610668565b93505060206107c886828701610668565b92505060406107d986828701610668565b9150509250925092565b6107ec81610647565b82525050565b6107fb816106d9565b82525050565b600060c08201905061081660008301896107e3565b61082360208301886107e3565b61083060408301876107f2565b61083d60608301866107e3565b61084a60808301856107e3565b61085760a08301846107e3565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60c0820160008201516108a460008501826106aa565b5060208201516108b760208501826106aa565b5060408201516108ca60408501826106eb565b5060608201516108dd60608501826106aa565b5060808201516108f060808501826106aa565b5060a082015161090360a08501826106aa565b50505050565b6000610915838361088e565b60c08301905092915050565b6000602082019050919050565b600061093982610862565b610943818561086d565b935061094e8361087e565b8060005b8381101561097f5781516109668882610909565b975061097183610921565b925050600181019050610952565b5085935050505092915050565b600060208201905081810360008301526109a6818461092e565b905092915050565b600080604083850312156109c5576109c4610642565b5b60006109d385828601610668565b92505060206109e485828601610668565b9150509250929050565b6000602082019050610a0360008301846107e3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4382610647565b9150610a4e83610647565b9250828201905080821115610a6657610a65610a09565b5b92915050565b6000606082019050610a8160008301866107e3565b610a8e60208301856107e3565b610a9b60408301846107e3565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220abb54a30a4d0443c390e2f8f24f7a2f5b0e07782112c64330fd2a7b7a65d041564736f6c634300081a0033";

type FunditBidConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunditBidConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunditBid__factory extends ContractFactory {
  constructor(...args: FunditBidConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FunditBid & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FunditBid__factory {
    return super.connect(runner) as FunditBid__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunditBidInterface {
    return new Interface(_abi) as FunditBidInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FunditBid {
    return new Contract(address, _abi, runner) as unknown as FunditBid;
  }
}
