/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FunditContract,
  FunditContractInterface,
} from "../../contracts/FunditContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "bidId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "company",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "ContractConfirmed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "cancelContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "completeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "company",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "coverageAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "confirmContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contracts",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "company",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "coverageAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premiumAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "enum FunditContract.ContractStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contractsByCompany",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contractsByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "getContract",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "coverageAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "enum FunditContract.ContractStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct FunditContract.InsuranceContract",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "company",
        type: "address",
      },
    ],
    name: "getContractsByCompany",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "coverageAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "enum FunditContract.ContractStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct FunditContract.InsuranceContract[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getContractsByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "company",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "coverageAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premiumAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "enum FunditContract.ContractStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct FunditContract.InsuranceContract[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061165e8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806358ee94cd1161006657806358ee94cd146101885780635d2c9f77146101a45780636ebc8c86146101c05780638736381a146101f0578063b6f50f9b1461020e5761009e565b806328047450146100a3578063474da79a146100bf5780634eca495f146100f85780635797047c146101285780635864858814610158575b600080fd5b6100bd60048036038101906100b89190610f0c565b61023e565b005b6100d960048036038101906100d49190610f0c565b6102fe565b6040516100ef9a99989796959493929190611000565b60405180910390f35b610112600480360381019061010d91906110c8565b61039f565b60405161011f919061129e565b60405180910390f35b610142600480360381019061013d91906112c0565b610634565b60405161014f9190611300565b60405180910390f35b610172600480360381019061016d91906112c0565b610665565b60405161017f9190611300565b60405180910390f35b6101a2600480360381019061019d9190610f0c565b610696565b005b6101be60048036038101906101b9919061131b565b610756565b005b6101da60048036038101906101d59190610f0c565b610a4a565b6040516101e79190611489565b60405180910390f35b6101f8610ba5565b6040516102059190611300565b60405180910390f35b610228600480360381019061022391906110c8565b610bab565b604051610235919061129e565b60405180910390f35b60006001600083815260200190815260200160002090506000600281111561026957610268610f89565b5b8160090160009054906101000a900460ff16600281111561028d5761028c610f89565b5b146102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490611502565b60405180910390fd5b60028160090160006101000a81548160ff021916908360028111156102f5576102f4610f89565b5b02179055505050565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508a565b60606000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561042c57602002820191906000526020600020905b815481526020019060010190808311610418575b505050505090506000815167ffffffffffffffff8111156104505761044f611522565b5b60405190808252806020026020018201604052801561048957816020015b610476610e40565b81526020019060019003908161046e5790505b50905060005b825181101561062957600160008483815181106104af576104ae611551565b5b60200260200101518152602001908152602001600020604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1660028111156105e8576105e7610f89565b5b60028111156105fa576105f9610f89565b5b8152505082828151811061061157610610611551565b5b6020026020010181905250808060010191505061048f565b508092505050919050565b6003602052816000526040600020818154811061065057600080fd5b90600052602060002001600091509150505481565b6002602052816000526040600020818154811061068157600080fd5b90600052602060002001600091509150505481565b6000600160008381526020019081526020016000209050600060028111156106c1576106c0610f89565b5b8160090160009054906101000a900460ff1660028111156106e5576106e4610f89565b5b14610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90611502565b60405180910390fd5b60018160090160006101000a81548160ff0219169083600281111561074d5761074c610f89565b5b02179055505050565b600160008082825461076891906115af565b92505081905550600060405180610140016040528060005481526020018981526020018881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200142815260200183426107e791906115af565b815260200160006002811115610800576107ff610f89565b5b815250905080600160008054815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090160006101000a81548160ff0219169083600281111561091b5761091a610f89565b5b0217905550905050600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000549080600181540180825580915050600190039060005260206000200160009091909190915055600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600054908060018154018082558091505060019003906000526020600020016000909190919091505586886000547f226e232425f3fc2d74f25ba3e45e79fe6e2b1d56f61239d2677dd67dc80a37ff8989428842610a2891906115af565b604051610a3894939291906115e3565b60405180910390a45050505050505050565b610a52610e40565b60016000838152602001908152602001600020604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff166002811115610b8857610b87610f89565b5b6002811115610b9a57610b99610f89565b5b815250509050919050565b60005481565b60606000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c3857602002820191906000526020600020905b815481526020019060010190808311610c24575b505050505090506000815167ffffffffffffffff811115610c5c57610c5b611522565b5b604051908082528060200260200182016040528015610c9557816020015b610c82610e40565b815260200190600190039081610c7a5790505b50905060005b8251811015610e355760016000848381518110610cbb57610cba611551565b5b60200260200101518152602001908152602001600020604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff166002811115610df457610df3610f89565b5b6002811115610e0657610e05610f89565b5b81525050828281518110610e1d57610e1c611551565b5b60200260200101819052508080600101915050610c9b565b508092505050919050565b604051806101400160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160006002811115610ecb57610eca610f89565b5b81525090565b600080fd5b6000819050919050565b610ee981610ed6565b8114610ef457600080fd5b50565b600081359050610f0681610ee0565b92915050565b600060208284031215610f2257610f21610ed1565b5b6000610f3084828501610ef7565b91505092915050565b610f4281610ed6565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7382610f48565b9050919050565b610f8381610f68565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610fc957610fc8610f89565b5b50565b6000819050610fda82610fb8565b919050565b6000610fea82610fcc565b9050919050565b610ffa81610fdf565b82525050565b600061014082019050611016600083018d610f39565b611023602083018c610f39565b611030604083018b610f39565b61103d606083018a610f7a565b61104a6080830189610f7a565b61105760a0830188610f39565b61106460c0830187610f39565b61107160e0830186610f39565b61107f610100830185610f39565b61108d610120830184610ff1565b9b9a5050505050505050505050565b6110a581610f68565b81146110b057600080fd5b50565b6000813590506110c28161109c565b92915050565b6000602082840312156110de576110dd610ed1565b5b60006110ec848285016110b3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61112a81610ed6565b82525050565b61113981610f68565b82525050565b61114881610fdf565b82525050565b610140820160008201516111656000850182611121565b5060208201516111786020850182611121565b50604082015161118b6040850182611121565b50606082015161119e6060850182611130565b5060808201516111b16080850182611130565b5060a08201516111c460a0850182611121565b5060c08201516111d760c0850182611121565b5060e08201516111ea60e0850182611121565b506101008201516111ff610100850182611121565b5061012082015161121461012085018261113f565b50505050565b6000611226838361114e565b6101408301905092915050565b6000602082019050919050565b600061124b826110f5565b6112558185611100565b935061126083611111565b8060005b83811015611291578151611278888261121a565b975061128383611233565b925050600181019050611264565b5085935050505092915050565b600060208201905081810360008301526112b88184611240565b905092915050565b600080604083850312156112d7576112d6610ed1565b5b60006112e5858286016110b3565b92505060206112f685828601610ef7565b9150509250929050565b60006020820190506113156000830184610f39565b92915050565b600080600080600080600060e0888a03121561133a57611339610ed1565b5b60006113488a828b01610ef7565b97505060206113598a828b01610ef7565b965050604061136a8a828b016110b3565b955050606061137b8a828b016110b3565b945050608061138c8a828b01610ef7565b93505060a061139d8a828b01610ef7565b92505060c06113ae8a828b01610ef7565b91505092959891949750929550565b610140820160008201516113d46000850182611121565b5060208201516113e76020850182611121565b5060408201516113fa6040850182611121565b50606082015161140d6060850182611130565b5060808201516114206080850182611130565b5060a082015161143360a0850182611121565b5060c082015161144660c0850182611121565b5060e082015161145960e0850182611121565b5061010082015161146e610100850182611121565b5061012082015161148361012085018261113f565b50505050565b60006101408201905061149f60008301846113bd565b92915050565b600082825260208201905092915050565b7f436f6e7472616374206d75737420626520616374697665000000000000000000600082015250565b60006114ec6017836114a5565b91506114f7826114b6565b602082019050919050565b6000602082019050818103600083015261151b816114df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115ba82610ed6565b91506115c583610ed6565b92508282019050808211156115dd576115dc611580565b5b92915050565b60006080820190506115f86000830187610f7a565b6116056020830186610f7a565b6116126040830185610f39565b61161f6060830184610f39565b9594505050505056fea2646970667358221220460ba07790f225ce2099513844f43c2836f42ef3949aa0600e2fa4c789b58e2d64736f6c634300081a0033";

type FunditContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FunditContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FunditContract__factory extends ContractFactory {
  constructor(...args: FunditContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FunditContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FunditContract__factory {
    return super.connect(runner) as FunditContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FunditContractInterface {
    return new Interface(_abi) as FunditContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FunditContract {
    return new Contract(address, _abi, runner) as unknown as FunditContract;
  }
}
